version: '3.8'

services:
  loginpage:
    build: .
    container_name: login-page
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: login-backend
    ports:
      - "3000:3000"
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER:-appuser}
      DB_PASSWORD: ${DB_PASSWORD:-apppassword}
      DB_NAME: ${DB_NAME:-loginapp}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      PORT: ${PORT:-3000}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: login-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-loginapp}
      MYSQL_USER: ${MYSQL_USER:-appuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-apppassword}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5

  tests:
    build: ./tests
    container_name: api-tests
    environment:
      API_BASE_URL: http://backend:3000/api
      NODE_ENV: test
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_healthy
    profiles:
      - test
    # This service won't start automatically
    # Run manually with: docker-compose run --rm tests

volumes:
  db_data:
