name: Run Tests

on:
  push:
    branches:
      - '**'  # Run on all branches
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: API Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create .env file for backend
        run: |
          cat > backend/.env << EOF
          DB_HOST=db
          DB_PORT=3306
          DB_USER=appuser
          DB_PASSWORD=apppassword
          DB_NAME=loginapp
          JWT_SECRET=test-secret-key-for-ci
          PORT=3000
          EOF

      - name: Start services (Database and Backend)
        run: |
          docker-compose up -d db backend
          echo "Services started, waiting for health checks..."

      - name: Wait for database to be healthy
        run: |
          timeout=60
          elapsed=0
          echo "Waiting for database to be ready..."
          until docker-compose ps db | grep -q "healthy" || [ $elapsed -ge $timeout ]; do
            echo "Database not ready yet... ($elapsed seconds elapsed)"
            sleep 5
            elapsed=$((elapsed + 5))
          done

          if [ $elapsed -ge $timeout ]; then
            echo "Database failed to start within timeout"
            docker-compose logs db
            exit 1
          fi

          echo "Database is healthy!"

      - name: Wait for backend to be ready
        run: |
          timeout=60
          elapsed=0
          echo "Waiting for backend API to be ready..."
          until curl -f http://localhost:3000/api/health > /dev/null 2>&1 || [ $elapsed -ge $timeout ]; do
            echo "Backend not ready yet... ($elapsed seconds elapsed)"
            sleep 5
            elapsed=$((elapsed + 5))
          done

          if [ $elapsed -ge $timeout ]; then
            echo "Backend failed to start within timeout"
            docker-compose logs backend
            exit 1
          fi

          echo "Backend is ready!"

      - name: Run tests
        run: |
          docker-compose run --rm tests
        env:
          API_BASE_URL: http://backend:3000/api

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Backend Logs ==="
          docker-compose logs backend
          echo ""
          echo "=== Database Logs ==="
          docker-compose logs db
          echo ""
          echo "=== Tests Logs ==="
          docker-compose logs tests

      - name: Cleanup
        if: always()
        run: |
          docker-compose down -v
          docker system prune -f

      - name: Test Results Summary
        if: success()
        run: |
          echo "âœ… All tests passed successfully!"
